<!--
=============COPYRIGHT============
Tin Submit
Copyright (C) 2012  Andrew Downes

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, version 3.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
<http://www.gnu.org/licenses/>.

=============CREDITS============
Thanks to Rustici Software for provision of TCDriver.js which powers
the calls to the Tin Can API and for developing the Tin Can API
TCDriver.js is reproduced here by permission under the understanding that
it is still a prototype. It comes from the prototype package found at:
http://scorm.com/project-tin-can-phase-3-prototyping-tin-can-content-outside-of-the-lms/

=============DEVELOPMENT STATUS============
This software is currently in development and is NOT intended to be used
in a live situation.

-->
<!doctype html>
<meta http-equiv="X-UA-Compatible" content="IE=Edge">
<html>
	<head>
		
		<meta name="viewport" content="width=600, initial-scale=1">
		<title>Register Extension</title>
		<link rel="stylesheet" href="../tinrepo.css" type="text/css" />
		<!-- jquery  
		<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>-->
		<script src="../js-lib/jquery-1.7.1.min.js"></script>
		<!-- lodash -->
		<script src="../js-lib/lodash.min.js"></script>

		<!-- Rustici's Tin Can functions - call these to access the Tin Can API-->
		<script src="../tincanjs/TinCan.js"></script>
		<script src="../tincanjs/Utils.js"></script>
		<script src="../tincanjs/Activity.js"></script>
		<script src="../tincanjs/ActivityDefinition.js"></script>
		<script src="../tincanjs/ActivityProfile.js"></script>
		<script src="../tincanjs/Agent.js"></script>
		<script src="../tincanjs/AgentAccount.js"></script>
		<script src="../tincanjs/Context.js"></script>
		<script src="../tincanjs/Group.js"></script>
		<script src="../tincanjs/InteractionComponent.js"></script>
		<script src="../tincanjs/LRS.js"></script>
		<script src="../tincanjs/Result.js"></script>
		<script src="../tincanjs/Score.js"></script>
		<script src="../tincanjs/State.js"></script>
		<script src="../tincanjs/Statement.js"></script>
		<script src="../tincanjs/StatementRef.js"></script>
		<script src="../tincanjs/StatementsResult.js"></script>
		<script src="../tincanjs/SubStatement.js"></script>
		<script src="../tincanjs/Verb.js"></script>
		<script src="../tincanjs/ContextActivities.js"></script>

		<!-- Base64 
		<script src="http://tin-can-can.googlecode.com/files/base64.js"></script>-->
		<script src="../js-lib/base64.js"></script>

		<!-- generic functions-->
		<script src="../TinFormFunctions.js"></script>
		<!-- main js file for this wrapper -->
		<script src="TinSubmit.js"></script>

	</head>
	<body >

		<h1>Register Extension</h1>
		<p>
			Blah blah text ipsum.
		</p>



		<div class="section" id="actor">
			<div class="background_div">
				I
			</div>

			<h2>Your details</h2>
			<p>
				Who are you?
			</p>

			<table>
				<tr>
					<td class="label">objectType:</td>
					<td>
					<select name="actorObjectType" id="actorObjectType" class="required objectType">
						<option value="Agent">Agent</option>
						<option value="Group">Group</option>
					</select></td>
				</tr>
			</table>
			
			<div id="actorAgent">
				<h3>Agent</h3>
			</div>
			
			<input type="button" value="+Agent" name="actorAgentAdd" id="actorAgentAdd" class="button displayNone agentAdd" />
			<!--Add a blank actor at the bottom-->
			<input type="button" value="-Agent" name="actorAgentRemove" id="actorAgentRemove" class="button displayNone agentRemove"/>
			<!--Removes the first blank field (not neccessarily the bottom field)-->
		</div>

		<div class="section" id="object">
			<div class="background_div">
				This
			</div>

			<h2>Extension details</h2>
			<p>
				What do you want to register?
			</p>

			<div id="activity" class="activitySubSection">
				<table>
				<tr>
					<td class="label">id:</td>
					<td>
					<input type="text" name="activityId" id="activityId" class="required activityId" />
					</td>
				</tr>
				<tr>
					<td  colspan="2" class="label label_heading">definition:</td>
				</tr>
				<tr>
					<td class="label">Extension type:</td>
					<td>
						<!--TODO: get the items for this select from the machine readable repository itself. 
							This will require a mechanism for identifying that extensions belong to a particular profile.
							As a hacky way of doing this, we could just look at the base URI, but this is not a long term
							solution as profiles SHOULD reuse one another's extensions where they fit.-->
					<select name="activityType" id="activityType" class="required activityType">
						<option value="http://tincanapi.co.uk/tinrepo/activitytypes/verb">Verb</option>
						<option value="http://tincanapi.co.uk/tinrepo/activitytypes/activity_type">Activity Type</option>
						<option value="http://tincanapi.co.uk/tinrepo/activitytypes/activity_definition_extension">Activity Definition Extension</option>
						<option value="http://tincanapi.co.uk/tinrepo/activitytypes/result_extension">Result Extension</option>
						<option value="http://tincanapi.co.uk/tinrepo/activitytypes/context_extension">Context Extension</option>
						<option value="http://tincanapi.co.uk/tinrepo/activitytypes/state_api_document">State API Document</option>
						<option value="http://tincanapi.co.uk/tinrepo/activitytypes/agent_profile_api_document">Agent Profile API Document</option>
						<option value="http://tincanapi.co.uk/tinrepo/activitytypes/activity_profile_api_document">Activity Profile API Document</option>
					</select>
					</td>
				</tr>
				<tr>
					<td  colspan="2" class="label label_heading activityNameHeading">name:</td>
				</tr>
				<tr id="activityNameButtonHolder">
					<td colspan="2" class="buttonHolder">
					<input type="button" value="+Lang" name="activityNameAdd" id="activityNameAdd" class="button nameAdd" />
					<!--Add a blank field at the bottom-->
					<input type="button" value="-Lang" name="activityNameRemove" id="activityNameRemove" class="button nameRemove"/>
					<!--Removes the first blank field (not neccessarily the bottom field)--></td>
				</tr>
				<tr>
					<td  colspan="2" class="label label_heading activityDescriptionHeading">description:</td>
				</tr>
				<tr id="activityDescriptionButtonHolder">
					<td colspan="2" class="buttonHolder">
					<input type="button" value="+Lang" name="activityDescriptionAdd" id="activityDescriptionAdd" class="button descriptionAdd" />
					<!--Add a blank field at the bottom-->
					<input type="button" value="-Lang" name="activityDescriptionRemove" id="activityDescriptionRemove" class="button descriptionRemove"/>
					<!--Removes the first blank field (not neccessarily the bottom field)--></td>
				</tr>
				
			</table>
			</div>
		</div>

<input type="button" value="Send!" name="sendStatement" id="sendStatement" class="button"/>

		<noscript>
			This course requires JavaScript to be enabled in your browser. Please enable JavaScript, then relaunch the course.
		</noscript>
	</body>
</html>
